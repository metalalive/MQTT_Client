# This MQTT client library works with verified middleware
# current available options for middlewares :
# * Linux
# * ESP8266_AT_parser (ESP8266 AT library, with FreeRTOS)
middleware  Linux

# For developers who want to use other third-party cryptography library, they can add new option and
# integrate files of the new cryptography library into this MQTT library.
# current available options for cryptography library:
# * libtomcrypt (default)
cryptolib  libtomcrypt

# enable TLS protocol in this MQTT library or not, default is yes
tls  yes

# path to your certificate / private key that will be used for authentication during TLS
# handshake processes. the certificate format can be X509 PEM-encoded or DER-encoded, this code
# generation script will convert every file specified  below to DER-encoded file during configuration
# by calling OpenSSL utility. (OpenSSL is pre-requisite at here).
pathcert     /path/to/your/CA_cert.der
pathprivkey  /path/to/your/CA_priv_key.der

# MQTT broker address
brokeraddr  135.7.91.13

# MQTT broker port
brokerport  1883

# MQTT broker username and password
brokerusername     your_broker_username
brokeruserpasswd   your_broker_passwd

# For some middlewares / hardware platforms that don't provide current date / time in real world
# , One can specify the expected date / time on the system initialization, or simply get current
# date time from underlying OS
# For example :
#     sysinithour       11
#     sysinitminutes    8
#     sysinitseconds    30
#     sysinitmonth      2
#     sysinitdate       5
#     sysinityear       2019

# -------------------------------------------------------------------------------------------------------
# For some middlewares that don't have file system (e.g. RTOS running on microcontroller-based embedded
# device), some data may be stored in memory of the target embedded device.
# -------------------------------------------------------------------------------------------------------
# wifi username and password, essential for ESP8266_AT_parser, optional for other middlewares.
wifiusername      your_wifi_SSID
wifiuserpasswd    your_wifi_passwd

